
TO DO
=====

When PRepeat is supposed to fail cleanly (because it hasn't consumed anything in that
iteration), the error is suppressed, and since we are sequencing errors and not maybes,
the fact that there's a nothing doesn't stop the sequence

Write tests

  Write some properties
    A lot of these might have the form "given some arbitrary parsers Pi, combine them
    with these different combinators in different ways to get some expected result
    relative to each other"

  Use ReaderT to generate recursive parsers
    There should be two different alternatives that generate PLabel
      One generates a new label
      The other returns a PLabel from the environment
        This will involve some knot-tying

Enable compile-time validation via Template Haskell

  There should be a template that splices in an empty list of decls on success,
  or somehow provokes an error on failure

Improve error messages

Use non-terminal labels to simplify error messages

Implement validations as described in doc/validation

